<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
		<meta name="description" content="A Free (Work In Progress) Tongue-in-Cheek Aquatic-Themed Web-Based RPG">
		<meta name="author" content="Emmett Framson">
		<META NAME="ROBOTS" CONTENT="INDEX, NOFOLLOW">
		<link rel="shortcut icon" href="img/favicon.ico" type="image/x-icon" />
		<title>Sturgeon Simulator [ALPHA]</title>

		<!-- Bootstrap -->
		<link href="css/bootstrap.min.css" rel="stylesheet">

		<!-- Bootstrap theme -->
		<!--<link href="css/bootstrap-theme.min.css" rel="stylesheet">-->

		<!-- jQuery UI -->
		<link href="css/jquery-ui.min.css" rel="stylesheet">
		<!--<link href="css/jquery-ui.structure.min.css" rel="stylesheet">-->
		<!--<link href="css/jquery-ui.theme.min.css" rel="stylesheet">-->

		<!-- Select2 -->
		<!-- <link href="css/select2.min.css" rel="stylesheet"> -->

		<!-- jQuery Growl -->
		<!-- <link href="css/jquery.growl.css" rel="stylesheet"> -->

		<!-- Theme customizations -->
		<link href="css/custom.css?cssBust=1459377890" rel="stylesheet">

		<!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
		<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
		<!--[if lt IE 9]>
		  <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
		  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
		<![endif]-->
	</head>

	<body>
		<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
		  <div class="modal-dialog">

		    <div class="modal-content massupdate">
			    <div class="modal-header">
			        <button type="button" class="close" data-bind="click: hideModal, visible: showModalClose"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
			        <h4 class="modal-title" data-bind="text: modalWindowTitle"></h4>
			    </div>
				<div class="modal-body" data-bind="html: modalWindowText">
				</div>
				<div class="modal-footer" data-bind="visible: showModalWindowFooter">
					<p class="small">(Click anywhere outside this box to dismiss this message)</p>
				</div>
		    </div>

		  </div>
		</div>

		<div class="container">

			<!-- start main header area -->
			<div class="header-area">

				<!-- start title + load/save -->
				<div class="row title-row">
					<div class="col-md-3 no-left-padding"><h2 class="title">Sturgeon Simulator</h2></div>
					<div class="col-md-6 no-left-padding"><h4 class="faq-notice">(This is in ALPHA - check out the FAQ)</h4></div>
					<div class="col-md-1 no-right-padding"><span class="saved-notice hidden">Saved!</span></div>
					<div class="col-md-1"><button type="button" class="save-load-controls btn btn-default hidden" data-bind="click: loadGame">Load</button></div>
					<div class="col-md-1 no-right-padding"><button type="button" class="save-load-controls btn btn-default hidden" data-bind="click: saveGame">Save</button></div>
				</div>
				<!-- end title + load/save -->

				<!-- start stat row header row -->
				<div class="row player-stat-row player-stats hidden">
					<div class="col-md-1 with-left-padding"><span class="stat-label">Level</span><span class="stat-value " data-bind="text: player().level()"></span></div>
					<div class="col-md-1">
						<span class="stat-label">HP</span>
						<span class="stat-value hp-stat current-hp" data-bind="text: player().hp(), css: { 'low-hp' : player().isHpLow() }"></span>
						<span class="stat-value hp-stat max-hp" data-bind="text: '/ ' + player().maxHp()"></span>
					</div>
					<div class="col-md-1"><span class="stat-label">AC</span><span class="stat-value" data-bind="text: player().totalArmor()"></span></div>
					<div class="col-md-1"><span class="stat-label">DMG</span><span class="stat-value" data-bind="text: player().minDmg() + ' - ' + player().maxDmg() + ( player().bonusDmg() > 0 ? ' (+' + player().bonusDmg() + ')' : '' )"></span></div>
					<div class="col-md-1"><span class="stat-label">STR</span><span class="stat-value" data-bind="text: player().str()"></span></div>
					<div class="col-md-1"><span class="stat-label">DEX</span><span class="stat-value" data-bind="text: player().dex()"></span></div>
					<div class="col-md-1"><span class="stat-label">END</span><span class="stat-value" data-bind="text: player().end()"></span></div>
					<div class="col-md-1"><span class="stat-label">SPD</span><span class="stat-value" data-bind="text: player().speed()"></span></div>


					<!--<div class="col-md-1"><span class="stat-label"></span><span class="stat-value"></span></div>-->
					<!--<div class="col-md-1"><span class="stat-label"></span><span class="stat-value"></span></div>-->

					<div class="col-md-1">
						<span class="stat-label">AP</span>
						<span class="stat-value hp-stat current-hp" data-bind="text: player().ap(), css: { 'low-hp' : player().ap() == 0 }"></span>
						<span class="stat-value hp-stat max-hp" data-bind="text: '/ ' + player().maxAp()"></span>
					</div>
					<div class="col-md-2"><span class="stat-label">EXP</span><span class="stat-value" data-bind="text: player().exp() + '/' + player().expRequiredForNextLevel()"></span></div>
					<div class="col-md-1 with-right-padding"><span class="stat-label">GP</span><span class="stat-value" data-bind="text: player().gp()"></span></div>
				</div>
				<!-- end stat row header row -->
			</div>
			<!-- end main header area -->

			<!-- start main content area -->
			<div class="content-area">

				<div id="loading" class="loading-indicator"><img src="img/ajax-loader.svg" /></div>

				<!-- start main row -->
				<div class="main-content-row row hidden">

					<!-- start leftcol -->
					<div class="col-md-4 leftcol">

						<!-- start leftcol-inner -->
						<div class="leftcol-inner">

							<!-- start player control area -->
							<div class="player-controls" data-bind="css: { hidden: leftColContent() != 'player_controls' }">

								<div class="state-controls">
									<div class="state-button-col">
										<div class="state-button-row">
											<h3>Abilities</h3>
										</div>
										<!-- ko foreach: $root.player().activeAbilitiesIterable() -->
										<div class="state-button-row">
											<div class="state-button">
												<button type="button" class="btn btn-default" data-bind="
													click: $root.useActiveAbility,
													text: buttonLabel + ( $data.apCost > 0 ? ' (' + $data.apCost + ' AP)' : '' ),
													css: { disabled : $data.apCost > 0 && $data.apCost > $root.player().ap() }">
												</button>
											</div>
										</div>
										<!-- /ko -->
									</div>
									<div class="state-button-col with-left-padding">
										<div class="state-button-row">
											<h3>Other Actions</h3>
										</div>
										<div class="state-button-row">
											<div class="state-button">
												<button type="button" class="btn btn-default" data-bind="
													click: toggleInventory,
													text: 'Check Inventory' + ' (' + player().inventorySlotsOccupied() + '/' + player().inventoryMaxSlots() + ')'">
												</button>
											</div>
										</div>
										<div class="state-button-row">
											<div class="state-button">
												<button type="button" class="btn btn-default" data-bind="
													css: { disabled: foodAvailableForQuickEat() == 0 || player().maxHp() == player().hp() },
													click: quickEatFood,
													text: 'Eat Food' + ( (hpRestoredByQuickEat() !== undefined) ? ' (+' + hpRestoredByQuickEat() + ' HP)' : '' )">
												</button>
											</div>
										</div>
										<div class="state-button-row">
											<div class="state-button">
												<button type="button" class="btn btn-default" data-bind="
													click: showPerks,
													text: (player().availablePerkPoints() > 0 ? 'Buy' : 'View') + ' Perks' + (player().availablePerkPoints() > 0 ? ' (' + player().availablePerkPoints() + ' pt. avail.)' : '')">
												</button>
											</div>
										</div>
									</div>
									<div class="clear"></div>
									<div class="state-button-col full-width player-skills">
										<div class="state-button-row">
											<h3>Skill Proficiencies</h3>
										</div>
										<!-- ko foreach: $root.player().activeAbilitiesIterable() -->
											<!-- ko if: $data.isLevelable == 1 -->
												<div class="state-button-row">
													<span class="stat" data-bind="text: $data.name + ':'"></span>
													<span class="value" data-bind="text: $data.skillLevel() + ' (progress: ' + $data.skillProgress() + '/' + $data.nextSkillLevelAtProgress() + ')'"></span>
												</div>
											<!-- /ko -->
										<!-- /ko -->
									</div>
									<div class="clear"></div>
									<div class="state-button-col full-width settings">
										<div class="state-button-row">
											<button type="button" class="btn btn-default" data-bind="click: showSettingsArea">
												<span class="glyphicon glyphicon-cog"></span>
											</button>
										</div>
									</div>
									<div class="clear"></div>
								</div>
								
							</div>
							<!-- end player control area -->

							<!-- start inventory area -->
							<div class="inventory" data-bind="template:{ name: 'item-list-template', data: $root.inventoryTemplateOptions() }, css: { hidden: leftColContent() != 'inventory' || ( leftColContent() == 'inventory' && inventoryEquipmentToggle() != 'Inventory' ) }"></div>

							<!-- start inventory/equipment area -->
							<div class="equipment" data-bind="template:{ name: 'equipment-template', data: { showInventoryEquipmentToggle : 1 } }, css: { hidden: leftColContent() != 'inventory' || ( leftColContent() == 'inventory' && inventoryEquipmentToggle() == 'Inventory' ) }" ></div>
							<!-- end inventory/equipment area -->

							<!-- end inventory area -->

							<!-- start known skills area -->
							<div class="known-skills" data-bind="css: { hidden: leftColContent() != 'skills' }">
								
								<h3>Current Perks/Known Skills</h3>

								<div class="lines">
									
									<div class="line empty section-header">
										<span class="item">Active Abilities</span>
										<span class="level">Level</span>
									</div>

									<!-- ko if: $root.player().getActiveAbilities().length == 0 -->
									<div class="line empty">
										<span class="item">You haven't learned any active abilities yet</span>
									</div>
									<!-- /ko -->

									<!-- ko foreach: $root.player().getActiveAbilities() -->
										<div class="line" data-bind="click: $root.setSkillAsActiveSkill, css: { selected: $root._shouldSkillBeSelected($data) }">
											<span class="item" data-bind="html: $data.name"></span>
											<span class="level" data-bind="text: (($data.isLevelable == 1) ? $data.skillLevel() : 'N/A')"></span>
										</div>
									<!-- /ko -->

									<div class="line empty section-header">
										<span class="item">Passive Abilities</span>
										<span class="level">Level</span>
									</div>

									<!-- ko if: $root.player().getPassiveAbilities().length == 0 -->
									<div class="line empty">
										<span class="item">You haven't learned any passive abilities yet</span>
									</div>
									<!-- /ko -->

									<!-- ko foreach: $root.player().getPassiveAbilities() -->
									<div class="line" data-bind="click: $root.setSkillAsActiveSkill, css: { selected: $root._shouldSkillBeSelected($data) }">
										<span class="item" data-bind="html: $data.name"></span>
										<span class="level"></span>
									</div>
									<!-- /ko -->

									<div class="line empty section-header">
										<span class="item">Combat Abilities</span>
										<span class="level">Level</span>
									</div>

									<!-- ko if: $root.player().getCombatAbilities().length == 0 -->
									<div class="line empty">
										<span class="item">You haven't learned any active abilities yet</span>
									</div>
									<!-- /ko -->

									<!-- ko foreach: $root.player().getCombatAbilities() -->
									<div class="line" data-bind="click: $root.setSkillAsActiveSkill, css: { selected: $root._shouldSkillBeSelected($data) }">
										<span class="item" data-bind="html: $data.name"></span>
										<span class="level" data-bind="text: 'N/A'"></span>
									</div>
									<!-- /ko -->

								</div>
							</div>
							<!-- end known skills area -->

							<!-- start player combat area -->
							<div class="combat player" data-bind="if: currentEnemy(), css: { hidden: leftColContent() != 'combat_player' }">
								<div class="player-info">
									<div class="header">You</div>
									<div class="lines stats">
										
										<div class="line">
											<span class="stat">HP:</span>
											<!--<span class="value hp" data-bind="animateNumbers: $root.player().hp()"></span>-->
										</div>
										<div class="line">
											<div id="playerhpbar" class="hpbar"><!--<div data-bind="animateWidth: $root.playerHpBarWidth(), animateNumbers: $root.player().hp()"></div>--><div class="bar"></div></div>
										</div>
										<div class="line">
											<span class="stat">Speed:</span>
											<span class="value" data-bind="text: $root.player().speed()"></span>
										</div>
										
									</div>
								</div>

								<div class="active-effects-section">
									<div class="effects-header">
										<div class="header">Active Effects</div>
										<!-- ko if: $root.player().activeCombatEffects().length > 0 -->
											<div class="small">(Mouseover to see description)</div>
										<!-- /ko -->
									</div>
									<div class="lines active-effects">

										<!-- ko if: $root.player().activeCombatEffects().length > 0 -->
										<div class="line empty section-header">
											<span class="item">Name</span>
											<span class="value">Duration</span>
										</div>
										<!-- /ko -->
										
										<!-- ko foreach: $root.player().activeCombatEffects() -->
										<div class="line" data-bind="tooltip: {title : $data.description, placement: 'top', container : 'body'}">
											<span class="item" data-bind="html: $data.name"></span>
											<span class="value" data-bind="text: $data.duration()"></span>
										</div>
										<!-- /ko -->

										<!-- ko if: $root.player().activeCombatEffects().length == 0 -->
										<div class="line empty">
											<span class="item">(No combat effects are currently active)</span>
										</div>
										<!-- /ko -->
										
									</div>
								</div>

								<div class="temporary-immunity-section">
									<div class="effects-header">
										<div class="header">Temporary Immunities</div>
										<!-- ko if: $root.player().immuneCombatEffects().length > 0 -->
											<div class="small">(Mouseover to see description)</div>
										<!-- /ko -->
									</div>
									<div class="lines active-effects">

										<!-- ko if: $root.player().immuneCombatEffects().length > 0 -->
										<div class="line empty section-header">
											<span class="item">Name</span>
											<span class="value">Duration</span>
										</div>
										<!-- /ko -->
										
										<!-- ko foreach: $root.player().immuneCombatEffects() -->
										<div class="line" data-bind="tooltip: {title : $data.description, placement: 'top', container : 'body'}">
											<span class="item" data-bind="html: $data.name"></span>
											<span class="value" data-bind="text: $data.delayUntilNextApplication()"></span>
										</div>
										<!-- /ko -->

										<!-- ko if: $root.player().immuneCombatEffects().length == 0 -->
										<div class="line empty">
											<span class="item">(No temporary immunities)</span>
										</div>
										<!-- /ko -->
									</div>
								</div>

							</div>
							<!-- end player combat area -->

							<!-- start settings area -->
							<div class="settings" data-bind="css: { hidden: leftColContent() != 'settings' }">
								<div class="lines form-group">
									<label for="wasdKeysControlPlayerPos">WASD keys control player movement:</label>
									<select class="form-control" data-bind="value: wasdKeysControlPlayerPos" id="wasdKeysControlPlayerPos">
										<option value="1">Yes</option>
										<option value="0">No (Use arrow keys instead)</option>
									</select>
									<!--<input type="" id=""/>-->
								</div>
								<div class="lines form-group">
									<label for="quickEatPriority">Quick eat priority:</label>
									<select class="form-control" data-bind="value: quickEatPriority" id="quickEatPriority">
										<option value="asc">Poorest first</option>
										<option value="desc">Best first</option>
									</select>
								</div>
								<div class="lines form-group">
									<label for="autoSaveBeforeBosses">Auto-save before bosses and level transitions:</label>
									<select class="form-control" data-bind="value: autoSaveBeforeBosses" id="autoSaveBeforeBosses">
										<option value="1">Yes</option>
										<option value="0">No</option>
									</select>
								</div>
								<div class="lines">
									<div class="line divider">Level generation options (applies only to new or reset levels)</div>
								</div>
								<div class="lines form-group">
									<label for="pctEmptySquares">Percent of grid squares that contain something:</label>
									<select class="form-control" data-bind="value: pctEmptySquares" id="pctEmptySquares">
										<option value="1">Few</option>
										<option value="2">Half</option>
										<option value="3">Most</option>
										<option value="4">ALL (Only for the truly insane!)</option>
									</select>
								</div>
								<div class="lines form-group">
									<label for="monsterSquareRates">How many non-empty grid squares should have monsters:</label>
									<select class="form-control" data-bind="value: monsterSquareRates" id="monsterSquareRates">
										<option value="1">Few</option>
										<option value="2">Half</option>
										<option value="3">Most</option>
										<option value="4">ALL (no traders, trainers, OR item squares)</option>
									</select>
								</div>
								<div class="lines form-group">
									<label for="enableZoom">Allow zoom (enables/disables double-tap zoom on Safari Mobile)</label>
									<select class="form-control" data-bind="value: enableZoom" id="enableZoom">
										<option value="1">Yes</option>
										<option value="0">No</option>
									</select>
								</div>
								<!--<div class="lines">
									<div class="line">NOTE: All changes saved automatically</div>
								</div>-->
							</div>
							<!-- end settings area -->

						</div>
						<!-- end leftcol-inner -->

					</div>
					<!-- end leftcol -->

					<!-- start centercol -->
					<div class="col-md-4 centercol">

						<div class="centercol-inner">

							<!-- start map button area -->
							<div class="map-buttons" data-bind="css: { hidden: centerColContent() != 'map_controls' }">

								<div class="map-button-cluster">

									<h3>Swim Direction</h3>

									<button type="button" class="btn btn-default up" data-bind="click: $root.movePlayerUp">Upstream</button>
									<div class="mid-buttons">
										<button type="button" class="btn btn-default left" data-bind="click: $root.movePlayerLeft">Left</button>
										<button type="button" class="btn btn-default right" data-bind="click: $root.movePlayerRight">Right</button>
									</div>
									<button type="button" class="btn btn-default down" data-bind="click: $root.movePlayerDown">Downstream</button>
									<!--<div class="arrow-keys-checkbox">
										<input type="checkbox" data-bind="checked: wasdKeysControlPlayerPos" />WASD keys control player movement
									</div>-->
								</div>
							</div>
							<!-- end map button area -->

							<!-- start inventory/equipment/merchant item description area -->
							<div class="item-desc" data-bind="css: { hidden: centerColContent() != 'item_desc' }">

								<!-- ko if: rightColContent() == "container" && currentContainer.length() > 0 -->
								<button class="btn btn-default take-all" type="button" data-bind="click: takeAllFromContainer, css: { hidden: rightColContent() != 'container', disabled : currentContainer.length() == 0 }"><span>Take All</span></button>
								<!-- /ko -->

								<button class="btn btn-default back" type="button" data-bind="click: showContentArea, css: { disabled: player().inventorySlotsOccupied() > player().inventoryMaxSlots(), rightfloat : rightColContent() == 'container' && currentContainer.length() > 0 }"><span data-bind="text: backButtonLabel()"></span></button>

								<div class="clear"></div>

								<div class="inner" data-bind="css: { hidden: activeItem().desc() == '', equipped: activeItem().actualItem() && activeItem().actualItem().isEquipped() == true }">

									<div class="desc" data-bind="html: _makeMagicReplacementsForItem(activeItem().desc(), activeItem().actualItem() )"></div>

									<!-- ko if: activeItem().actualItem() -->

										<!-- ko if: activeItem().canBuy() == 1 -->
										<div class="line">
											<span class="stat">Buy Value:</span>
											<span class="value" data-bind="text: $root._getItemValueString(activeItem().actualItem(), 'buy')"></span>
										</div>
										<!-- /ko -->
										<!-- ko if: activeItem().canBuy() == 0 && activeItem().actualItem().canSell() == 1 -->
										<div class="line">
											<span class="stat">Sell Value:</span>
											<span class="value" data-bind="text: $root._getItemValueString(activeItem().actualItem(), 'sell')"></span>
										</div>
										<!-- /ko -->

										<!-- ko if: activeItem().actualItem().armorValue && typeof activeItem().actualItem().armorValue === 'function' -->
										<div class="line">
											<span class="stat">Armor Value:</span>
											<span class="value" data-bind="text: activeItem().actualItem().armorValue() + ( activeItem().actualItem().numUpgradesApplied() > 0 ? ' (Improved)' : '') "></span>
										</div>
										<!-- /ko -->

										<!-- ko if: activeItem().actualItem().handsRequired -->
										<div class="line">
											<span class="stat">Fins required:</span>
											<span class="value" data-bind="text: activeItem().actualItem().handsRequired"></span>
										</div>
										<!-- /ko -->

										<!-- ko if: activeItem().actualItem().dmgMin && typeof activeItem().actualItem().dmgMin === 'function' -->
										<div class="line">
											<span class="stat">DMG:</span>
											<span class="value" data-bind="text: activeItem().actualItem().dmgMin() + ' - ' + activeItem().actualItem().dmgMax() + ( activeItem().actualItem().numUpgradesApplied() > 0 ? ' (Improved)' : '')"></span>
										</div>
										<!-- /ko -->

										<!-- ko if: activeItem().actualItem().extraDamage && typeof activeItem().actualItem().extraDamage === 'function' && activeItem().actualItem().extraDamage() > 0 -->
										<div class="line">
											<span class="stat">Bonus DMG:</span>
											<span class="value" data-bind="text: activeItem().actualItem().extraDamage()"></span>
										</div>
										<!-- /ko -->

										<!-- ko if: activeItem().actualItem().isEquippable && activeItem().canUnEquip() == 0 -->
										<div class="line">
											<span class="stat">If Equipped:</span>
											<span class="value" data-bind="html: getEquipChangeText()"></span>
										</div>
										<!-- /ko -->

										<!-- ko if: unEquipNotice() -->
										<div class="line">
											<span class="value small" data-bind="html: '<em>' + unEquipNotice() + '</em>'"></span>
										</div>
										<!-- /ko -->

										<!-- ko if: activeItem().canBuy() -->
										<div class="line">
											<span class="stat">Qty Available:</span>
											<span class="value" data-bind="text: activeItem().actualItem().qty()"></span>
										</div>
										<!-- /ko -->

										<!-- ko if: activeItem().actualItem().hasQuality -->
										<div class="line">
											<span class="stat">Quality:</span>
											<span class="value" data-bind="text: activeItem().actualItem().quality()"></span>
										</div>
										<!-- /ko -->

										<!-- ko if: activeItem().actualItem().level && typeof activeItem().actualItem().level === 'function' -->
										<div class="line">
											<span class="stat">Item Level: </span>
											<span class="value" data-bind="text: activeItem().actualItem().level()"></span>
										</div>
										<!-- /ko -->

										<!-- ko if: activeItem().actualItem().type && activeItem().actualItem().type == 'armor'-->
										<div class="line">
											<span class="stat">Armor Slot: </span>
											<span class="value" data-bind="text: activeItem().actualItem().armorSlot.toProperCase()"></span>
										</div>
										<!-- /ko -->

										<!-- ko if: activeItem().actualItem().slotsRequired !== undefined -->
										<div class="line">
											<span class="stat">Inventory Slots Occupied: </span>
											<span class="value" data-bind="text: activeItem().actualItem().slotsRequired"></span>
										</div>
										<!-- /ko -->

									<!-- /ko -->

									<!-- ko foreach: $root.activeItemButtons() -->
										<button class="btn inventory-control" data-bind="css: $data.css, click: $data.click, text: $data.text"></button>
									<!-- /ko -->
									
								</div>
							</div>
							<!-- end inventory/equipment/merchant item description area -->

							<!-- start skill description area -->
							<div class="skill-desc" data-bind="css: { hidden: centerColContent() != 'skills' }">

								<button class="btn btn-default back" type="button" data-bind="click: showContentArea, css: { disabled: player().inventorySlotsOccupied() > player().inventoryMaxSlots() }"><span data-bind="text: backButtonLabel()"></span></button>

								<div class="clear"></div>

								<!-- ko if: activeSkill() !== undefined -->

									<div class="inner" data-bind="css: { known: typeof activeSkill().getExportData === 'function' }"><!-- relying on getExportData here is a quick hack -->

										<div class="desc" data-bind="html: activeSkill().description"></div>

										<!-- ko if: typeof activeSkill().getExportData === 'function' -->

											<!-- ko if: activeSkill().skillLevel !== undefined && activeSkill().showLevelInformation !== undefined && activeSkill().showLevelInformation() == 1 -->
											<div class="line">
												<span class="stat">Skill level:</span>
												<span class="value" data-bind="html: activeSkill().skillLevel()"></span>
											</div>
											<!-- /ko -->

											<!-- ko if: activeSkill().skillProgress !== undefined && activeSkill().showLevelInformation !== undefined && activeSkill().showLevelInformation() == 1 -->
											<div class="line">
												<span class="stat">Skill progress:</span>
												<span class="value" data-bind="html: activeSkill().skillProgress() + '/' + activeSkill().nextSkillLevelAtProgress()"></span>
											</div>
											<!-- /ko -->

											<!-- ko if: activeSkill().baseCooldown !== undefined && activeSkill().baseCooldown > 0 -->
											<!--<div class="line">
												<span class="stat">Base cooldown:</span>
												<span class="value" data-bind="html: activeSkill().baseCooldown"></span>
											</div>-->
											<!-- /ko -->

										<!-- /ko -->

										<!-- ko if: activeSkill().canPurchase == 1 -->

											<!-- ko if: activeSkill().requiredLevel !== undefined -->
											<div class="line">
												<span class="stat">Level Requirement:</span>
												<span class="value" data-bind="html: (activeSkill().requiredLevel > 0 ? activeSkill().requiredLevel : 'None')"></span>
											</div>
											<!-- /ko -->

											<button class="btn btn-default skill-control" data-bind="css: { disabled: canPurchaseActiveSkill() == 0 }, click: purchaseActiveSkill, text: 'Purchase (1 pt.)'"></button>
										<!-- /ko -->
										
									</div>

								<!-- /ko -->
								<div class="clear"></div>
							</div>
							<!-- end skill description area -->

							<!-- start combat button area -->
							<div class="combat combat-buttons" data-bind="if: currentEnemy(), css: { hidden: centerColContent() != 'combat_buttons' }">
								<div class="combat-buttons-inner">
									<div class="line">
										<button type="button" class="btn btn-default" data-bind="css: { hidden: $root.currentEnemy() == undefined || !$root.currentEnemy().isDead() }, click: $root.lootEnemy">Loot</button>
										<span class="button-label"></span>
									</div>
									<!-- ko if: !$root.currentEnemy().isDead() && !$root.player().isDead() -->

										<!-- ko foreach: $root.player().combatAbilitiesIterable() -->
										<div class="line">
											<button type="button" class="btn btn-default" data-bind="
												click: $root.playerAttacks,
												text: buttonLabel + ( cooldown() > 0 ? ' (' + cooldown() + ')' : '' ),
												css: { disabled : cooldown() > 0 || $root.disablePlayerCombatButtons() == 1 || $root.player().canAct() == 0 }
											"></button>
											<span class="button-label" data-bind="text: $data.description"></span>
										</div>
										<!-- /ko -->

									<!-- /ko -->
									<!-- ko if: !$root.player().isDead() -->
									<div class="line">
										<button type="button" class="btn btn-default" data-bind="css: { disabled: $root.player().numPotionsAvailable() < 1 || $root.disablePlayerCombatButtons() == 1 || $root.player().canAct() == 0 }, click: $root.useHealthPotion, text: 'Use Health Potion (' + $root.player().numPotionsAvailable() + ')'">Use Health Potion</button>
										<span class="button-label">Consume a Health Potion (if any are in your inventory) and restore half your maximum HP</span>
									</div>
									<!-- /ko -->
									<!-- ko if: !$root.currentEnemy().isDead() && !$root.player().isDead() -->
									<div class="line">
										<button type="button" class="btn btn-default" data-bind="css: { disabled: $root.disablePlayerCombatButtons() == 1 }, click: $root.playerPass">Pass</button>
										<span class="button-label">Take no action during the next combat round</span>
									</div>

									<div class="line">
										<button type="button" class="btn btn-default" data-bind="css: { disabled: $root.disablePlayerCombatButtons() == 1 || $root.player().canAct() == 0 }, click: $root.playerFlee">Flee!</button>
										<span class="button-label">Swim away as fast as you possibly can. (The monster will remain where it is)</span>
									</div>
									<!-- /ko -->
								</div>
							</div>
							<!-- end combat button area -->

							<!-- start fullscreen content area -->
							<div class="full-screen-row full-screen-notice x-wide-center" data-bind="with: fullScreenContent, css: { hidden: centerColContent() != 'fullscreen_content' }">

								<div class="notice-text">
									<div data-bind="html: text"></div>
								</div>
								<div class="notice-button">
									<div data-bind="foreach: buttons">
										<button type="button" class="btn btn-default" data-bind="click: $root.handleDynamicButtonAction, text: $data.title, css : ($data.css != undefined ? (typeof $data.css == 'string' ? ( typeof $root[$data.css] == 'function' ? $root[$data.css]() : $data.css) : $data.css()) : '' )"></button>
									</div>
								</div>

							</div>
							<!-- end fullscreen content area -->

							<!-- start settings area -->
							<div class="settings-buttons" data-bind="css: { hidden: centerColContent() != 'settings' }">

								<div class="back"><button class="btn btn-default" type="button" data-bind="click: backFromSettings"><span data-bind="text: 'Back'"></span></button></div>

								<div class="saved-pref-notice hidden"><span class="">Saved!</span></div>

								<div class="save"><button class="btn btn-default" type="button" data-bind="click: savePrefs"><span>Save Preferences</span></button></div>

								<div class="clear"></div>

							</div>
							<!-- end settings area -->

						</div>

					</div>
					<!-- end centercol -->

					<!-- start rightcol -->
					<div class="col-md-4 rightcol">

						<div class="rightcol-inner">

							<!-- start map area -->
							<div class="map-container" data-bind="css: { hidden: rightColContent() != 'map' }">
								<div class="map-level-num">
									<h3 data-bind="text: 'Dungeon Level: ' + $root.level().levelNum()"></h3>
								</div>
								<div class="map">
									<canvas id="map-canvas" width="300" height="300"></canvas>
								</div>
								<div class="clear"></div>
							</div>
							<!-- end map area -->

							<!-- start equipment area -->
							<div class="equipment" data-bind="template:{ name: 'equipment-template', data: {} }, css: { hidden: rightColContent() != 'equipment' }" ></div>
							<!-- end equipment area -->

							<!-- start loot container area -->
							<div class="container-ui" data-bind="template: {name: 'item-list-template', data: $root.containerTemplateOptions() }, css: { hidden: rightColContent() != 'container' }" ></div>
							<!-- end loot container area -->

							<!-- start merchant area -->
							<div class="merchant" data-bind="template: {name: 'item-list-template', data: $root.merchantTemplateOptions() }, css: { hidden: rightColContent() != 'merchant' }" ></div>
							<!-- end merchant area -->

							<!-- start available skills area -->
							<div class="available-skills" data-bind="css: { hidden: rightColContent() != 'skills' }" >

								<h3>Unlearned Abilities <span data-bind="text: '(' + player().availablePerkPoints() + ' pt' + ( player().availablePerkPoints() == 1 ? '' : 's' ) + ' avail.)'"></span></h3>

								<div class="lines">

									<div class="line empty section-header">
										<span class="item">Active Abilities</span>
									</div>

									<!-- ko if: $root.player().getAvailableActiveAbilities().length == 0 -->
									<div class="line empty">
										<span class="item">There are no available active abilities to learn</span>
									</div>
									<!-- /ko -->

									<!-- ko foreach: $root.player().getAvailableActiveAbilities() -->
									<div class="line" data-bind="click: $root.setSkillAsActiveSkill, css: { selected: $root._shouldSkillBeSelected($data) }">
										<span class="item" data-bind="text: $data.name"></span>
									</div>
									<!-- /ko -->

									<div class="line empty section-header">
										<span class="item">Passive Abilities</span>
									</div>

									<!-- ko if: $root.player().getAvailablePassiveAbilities().length == 0 -->
									<div class="line empty">
										<span class="item">There are no available passive abilities to learn</span>
									</div>
									<!-- /ko -->

									<!-- ko foreach: $root.player().getAvailablePassiveAbilities() -->
									<div class="line" data-bind="click: $root.setSkillAsActiveSkill, css: { selected: $root._shouldSkillBeSelected($data) }">
										<span class="item" data-bind="text: $data.name"></span>
									</div>
									<!-- /ko -->

									<div class="line empty section-header">
										<span class="item">Combat Abilities</span>
									</div>

									<!-- ko if: $root.player().getAvailableCombatAbilities().length == 0 -->
									<div class="line empty">
										<span class="item">There are no available combat abilities to learn</span>
									</div>
									<!-- /ko -->

									<!-- ko foreach: $root.player().getAvailableCombatAbilities() -->
									<div class="line" data-bind="click: $root.setSkillAsActiveSkill, css: { selected: $root._shouldSkillBeSelected($data) }">
										<span class="item" data-bind="text: $data.name"></span>
									</div>
									<!-- /ko -->

								</div>

							</div>
							<!-- end available skills area -->

							<!-- start monster combat area -->
							<div class="combat enemy" data-bind="if: currentEnemy(), css: { hidden: rightColContent() != 'combat_enemy' }">
								<div class="enemy-info">
									<div class="header" data-bind="text: $root.currentEnemy().name()"></div>
									<div class="lines stats">
										
										<div class="line">
											<span class="stat">HP:</span>
											<!--<span class="value hp" data-bind="animateNumbers: $root.currentEnemy().hp()"></span>-->
										</div>
										<div class="line">
											<div id="enemyhpbar" class="hpbar"><!--<div data-bind="animateWidth: $root.enemyHpBarWidth(), animateNumbers: $root.currentEnemy().hp()"></div>--><div class="bar"></div></div>
										</div>
										<div class="line">
											<span class="stat">Speed:</span>
											<span class="value" data-bind="text: $root.currentEnemy().speed()"></span>
										</div>
										<div class="line">
											<span class="stat">AC:</span>
											<span class="value" data-bind="text: $root.currentEnemy().armor()"></span>
										</div>
										
									</div>
									<div class="desc" data-bind="text: $root.currentEnemy().desc()"></div>
								</div>

								<div class="active-effects-section">
									<div class="effects-header">
										<div class="header">Active Effects</div>
										<!-- ko if: $root.currentEnemy().activeCombatEffects().length > 0 -->
											<div class="small">(Mouseover to see description)</div>
										<!-- /ko -->
									</div>
									<div class="lines active-effects">

										<!-- ko if: $root.currentEnemy().activeCombatEffects().length > 0 -->
										<div class="line empty section-header">
											<span class="item">Name</span>
											<span class="value">Duration</span>
										</div>
										<!-- /ko -->
										
										<!-- ko foreach: $root.currentEnemy().activeCombatEffects() -->
										<div class="line" data-bind="tooltip: {title : $data.description, placement: 'top', container : 'body'}">
											<span class="item" data-bind="html: $data.name"></span>
											<span class="value" data-bind="text: $data.duration()"></span>
										</div>
										<!-- /ko -->

										<!-- ko if: $root.currentEnemy().activeCombatEffects().length == 0 -->
										<div class="line empty">
											<span class="item">(No combat effects are currently active)</span>
										</div>
										<!-- /ko -->
										
									</div>
								</div>

								<div class="temporary-immunity-section">
									<div class="effects-header">
										<div class="header">Temporary Immunities</div>
										<!-- ko if: $root.currentEnemy().immuneCombatEffects().length > 0 -->
											<div class="small">(Mouseover to see description)</div>
										<!-- /ko -->
									</div>
									<div class="lines active-effects">

										<!-- ko if: $root.currentEnemy().immuneCombatEffects().length > 0 -->
										<div class="line empty section-header">
											<span class="item">Name</span>
											<span class="value">Duration</span>
										</div>
										<!-- /ko -->
										
										<!-- ko foreach: $root.currentEnemy().immuneCombatEffects() -->
										<div class="line" data-bind="tooltip: {title : $data.description, placement: 'top', container : 'body'}">
											<span class="item" data-bind="html: $data.name"></span>
											<span class="value" data-bind="text: $data.delayUntilNextApplication()"></span>
										</div>
										<!-- /ko -->

										<!-- ko if: $root.currentEnemy().immuneCombatEffects().length == 0 -->
										<div class="line empty">
											<span class="item">(No temporary immunities)</span>
										</div>
										<!-- /ko -->
									</div>
								</div>

								
							</div>
							<!-- end monster combat area -->

						</div>

					</div>
					<!-- end rightcol -->

				</div>
				<!-- end main row -->

			</div>
			<!-- end main content area -->

			<!-- item list template -->
			<script type="text/html" id="item-list-template">
					<h3 data-bind="html: $data.header"></h3>

					<div class="lines">

						<div class="container-ui-section-header-container">
							<div class="line empty section-header">
								<span class="item">Item</span>
								<span class="qty">Qty</span>
							</div>
						</div>

						<!-- ko if: $data.noLinesCond -->
							<div class="line empty">
								<span class="item" data-bind="text: $data.emptyString"></span>
							</div>
						<!-- /ko -->
						<!-- ko if: $data.showLinesCond -->
							<div data-bind="css: $data.cssClass + '-inner'">
								<!-- ko foreach: $data.itemCollection -->
									<div class="line" data-bind="click: $parent.onClickFn, css: { selected: $root._shouldItemBeSelected($data), hidden : $root.shouldLineItemBeHidden($data, $parent.optKey) }">
										<span class="item" data-bind="html: $root._getHtmlDisplayStringForItem($data, $parent.optKey)"></span>
										<span class="qty" data-bind="text: $data.qty(), css: {hidden: $parent.showCostInsteadOfQty == 1}"></span>
										<span class="qty" data-bind="text: ( $root.player().hasPassiveAbility('improved_barter') ? Math.floor($data.buyValue() / 2) : $data.buyValue() ) + ' GP', css: {hidden: $parent.showCostInsteadOfQty == 0}"></span>
									</div>
								<!-- /ko -->
							</div>
						<!-- /ko -->
						<div class="container-ui-section-footer-container">
							<div class="line empty section-header">
								<span class="item">Sorted By: <button type="button" class="btn btn-default" data-bind="text: $root[$data.optKey + 'SortOrder'](), click: $root.switchNextSortOrder"></button></span>
								<!-- ko if: $root.showInventoryEquipmentToggle() == 1 -->
									<span class="item showInventoryEquipmentToggle">Showing: <button type="button" class="btn btn-default" data-bind="text: $root.inventoryEquipmentToggle(), click: $root.switchInventoryEquipmentToggle"></button></span>
									<div class="clear"></div>
								<!-- /ko -->
							</div>
						</div>
					</div>
			</script>
			<!-- end item list template -->

			<!-- start equipment template -->
			<script type="text/html" id="equipment-template">

				<h3>Equipment</h3>

				<div class="equipment-inner-container">

					<!-- ko with: $root.player().equipment().armor().head() -->
						<div class="line" data-bind="click: function(){ $root.setEquipmentItemAsActiveItem( $data ) }, css: { selected: $root._shouldItemBeSelected($data), empty : $data.name == undefined }">
							<span class="slot">Head Armor:</span>
							<span class="item" data-bind="html: $root._getHtmlDisplayStringForItem($data, 'equipment')"></span>
						</div>
					<!-- /ko -->

					<!-- ko with: $root.player().equipment().armor().fin() -->
						<div class="line" data-bind="click: function(){ $root.setEquipmentItemAsActiveItem( $data ) }, css: { selected: $root._shouldItemBeSelected($data), empty : $data.name == undefined }">
							<span class="slot">Fin Armor:</span>
							<span class="item" data-bind="html: $root._getHtmlDisplayStringForItem($data, 'equipment')"></span>
						</div>
					<!-- /ko -->

					<!-- ko with: $root.player().equipment().armor().body() -->
						<div class="line" data-bind="click: function(){ $root.setEquipmentItemAsActiveItem( $data ) }, css: { selected: $root._shouldItemBeSelected($data), empty : $data.name == undefined }">
							<span class="slot">Body Armor:</span>
							<span class="item" data-bind="html: $root._getHtmlDisplayStringForItem($data, 'equipment')"></span>
						</div>
					<!-- /ko -->

					<!-- ko with: $root.player().equipment().armor().tail() -->
						<div class="line" data-bind="click: function(){ $root.setEquipmentItemAsActiveItem( $data ) }, css: { selected: $root._shouldItemBeSelected($data), empty : $data.name == undefined }">
							<span class="slot">Tail Armor:</span>
							<span class="item" data-bind="html: $root._getHtmlDisplayStringForItem($data, 'equipment')"></span>
						</div>
					<!-- /ko -->

					<!-- ko with: $root.player().equipment().weapon() -->
						<div class="line" data-bind="click: function(){ $root.setEquipmentItemAsActiveItem( $data ) }, css: { selected: $root._shouldItemBeSelected($data), empty : $data.name == undefined }">
							<span class="slot">Weapon:</span>
							<span class="item" data-bind="html: $root._getHtmlDisplayStringForItem($data, 'equipment')"></span>
						</div>
					<!-- /ko -->

					<!-- ko with: $root.player().equipment().shield() -->
						<div class="line" data-bind="click: function(){ $root.setEquipmentItemAsActiveItem( $data ) }, css: { selected: $root._shouldItemBeSelected($data), empty : $data.name == undefined }">
							<span class="slot">Shield:</span>
							<span class="item" data-bind="html: $root._getHtmlDisplayStringForItem($data, 'equipment')"></span>
						</div>
					<!-- /ko -->

					<!-- ko with: $root.player().equipment().accessory() -->
						<div class="line" data-bind="click: function(){ $root.setEquipmentItemAsActiveItem( $data ) }, css: { selected: $root._shouldItemBeSelected($data), empty : $data.name == undefined }">
							<span class="slot">Accessory:</span>
							<span class="item" data-bind="html: $root._getHtmlDisplayStringForItem($data, 'equipment')"></span>
						</div>
					<!-- /ko -->
				</div>

				<!-- ko if: $data.showInventoryEquipmentToggle -->
					<div class="container-ui-section-footer-container">
						<div class="line empty section-header">
							
								<span class="item showInventoryEquipmentToggle">Showing: <button type="button" class="btn btn-default" data-bind="text: $root.inventoryEquipmentToggle(), click: $root.switchInventoryEquipmentToggle"></button></span>
								<div class="clear"></div>
						</div>
					</div>
				<!-- /ko -->

			</script>
			<!-- end equipment template -->

			<!-- start message log area -->
			<div class="log-area hidden">
				<div class="row log-row">
					<div class="col-md-12">
						<div class="message-log" data-bind="foreach: logMessages()">
							<p data-bind="html: $data.text, css: $data.cssClass"></p>
						</div>
					</div>
				</div>
			</div>
			<!-- end message log area -->

			<!-- start FAQ area -->
			<div class="hidden">
				<div id="faq-content">
					<div class="q-section">
						<h4 class="q">So...wtf is this?</h4>
						<div class="a"><p><em>Sturgeon Simulator</em> is a browser-based video game. In early 2015 I played the (excellent) iOS game <em><a href="https://itunes.apple.com/us/app/a-dark-room/id736683061?mt=8" target="_blank">A Dark Room</a>.</em> Certain parts of that game reminded me of another game I'd played a long time ago: <em>Moraff's World</em> (1991). Don't worry, apparently nobody else has heard of it either. At any rate, I tried to find a game that centered around the mechanics of <em>ADR</em> that I'd really liked, and was more modern than <em>MW</em>&mdash;you know, something that I didn't need a DOS emulator for. I could not find such a game in existence, so...it turns out I had to make one. And, as I'm most familiar with web languages, here we are.</p>
						</div>
						<h4 class="q">You totally didn't answer my question. Seriously, wtf is this?</h4>
						<div class="a"><p>Okay, okay. Sorry, got side-tracked there. So, <em>Sturgeon Simulator</em> is a turn-based RPG (Role-Playing Game, but you probably knew that already) where you move around a dungeon, collect loot, sometimes fight bosses, level-up your character, and whatever other features I end up adding in. But everything is aquatic. It's like a regular RPG, but everything is coated in a layer of algae. This game is in ALPHA, meaning things will be broken, features not fully implemented yet, and lots of balance issues. Your feedback and patience is greatly appreciated! But hey, it's totally free :) And as a bonus, it's also a completely accurate representation of what it's really like to be a juvenille sturgeon!*</p>
						<p class="small"><em>*This is a completely inaccurate representation of what it's like to be a juvenille sturgeon. Or a mature sturgeon, or really a fish of any kind.</em></p>
						</div>
						<h4 class="q">Ummm...okay. So it's a game?</h4>
						<div class="a"><p>Yes! It's the RPG that didn't exist so I made it so now it exists so now I can play it and it's on the Internet so you can play it too.</p>
						</div>
						<h4 class="q">Alright then. So how do I play?</h4>
						<div class="a"><p>It's pretty straightforward. I'm obviously biased, because I made the damn thing and therefore know it upside-down, backwards, and inside-out, but if I've done my job right, it <em>should</em> be pretty straightforward and self-explanatory. Please please email me (see page footer) if you think something is weird or doesn't make sense, and I'll either add an entry to this FAQ explaining it, or alter the UI so it's more clear. Or both.</p>
						</div>
						<h4 class="q">Well you're wrong, I have no idea where to start. How do I move?</h4>
						<div class="a"><p>You move your character around the grid (i.e. - the "dungeon") using the provided on-screen controls or the WASD keys.</p>
						</div>
						<h4 class="q">Can I use arrow keys instead of WASD?</h4>
						<div class="a"><p>Yes. By default only the WASD keys work, but if you click the settings button (the little gear icon) you can toggle between WASD and arrow keys. Just be aware that because it's a browser, arrow keys will probably also move the page up and down. I can try and fix this if there turns out to be a huge preference for arrow keys over WASD keys, but if you're a PC gamer you're probably already used to using WASD for things.</p>
						</div>
						<h4 class="q">I moved and a thing happened!</h4>
						<div class="a"><p>Yes, although technically that's a statement, not a question. Things will probably happen after you move your character. Every time you move into a new square, there's a chance of encountering something. It might be a monster you have to fight, a merchant you can trade with, an item you can pick up, or something else.</p>
						</div>
						<h4 class="q">Wait, there are monsters in this game? Surely you can't be serious.</h4>
						<div class="a"><p>Yes, and don't call me Shirley. When you move into a new square (i.e. - one you haven't been in before), there is a chance you will encounter a monster. When this happens, you'll be notified with a little message beforehand, and then the screen will change to the "fight" interface. Fights take place in a little pocket dimension of the dungeon, so basically cooldowns for abilities like Find Food and Scan Surroundings won't count down while you're fighting.</p>
						</div>
						<h4 class="q">Find what? Scan what?</h4>
						<div class="a"><p>Oh right, those. So at the start of the game, you have two abilities unlocked: Find Food and Scan Surroundings. You can use both of those abilities while you're in the main dungeon screen, but not while you're in combat. Find Food will let you scrounge around in your current square for consumables. The quality of the found item varies by skill, but one way or another you'll always find some item you can eat to restore your health.</p>
						<p>Scan Surroundings will reveal, up to a certain point, any squares you have line-of-sight to currently, as well as their contents (if any). The distance of the scan will increase as your skill improves, and you can acquire another skill that will let the ability penetrate through walls (i.e. - it reveals all squares in a certain radius around you)</p>
						</div>
						<h4 class="q">Okay, so go back to that fighting thing.</h4>
						<div class="a"><p>Yeah, so, combat is a series of turn-based rounds. A round consists of both combatants using a single combat ability. The order that you fight in for each round depends on your SPD (Speed) stat, and the monster's. If its number is higher, it goes first. If your number is higher, you go first. If it's a tie, who goes first is randomly chosen each round. Combat abilities range from the basics ("Attack", which makes a single attack) to the more complex ("Flurry" makes a series of attacks which do less damage than normal, but which each have a chance of doing bonus damage; "Stun" will prevent the target from acting for a number of rounds). You only start out knowing how to make basic attacks, but as your character levels up you can learn more moves.</p>
						</div>
						<h4 class="q">Eeeek! I don't want to fight right now!</h4>
						<div class="a"><p>That's okay. At any point during a fight, you can flee (provided you are not stunned, dead, or otherwise incapacitated). There are no penalties for fleeing combat, although the monster will continue occupying that same square until it is defeated, and it will regenerate back up to full health whenever you next encounter it.</p>
						</div>
						<h4 class="q">Aww man, I died! Laaaaame.</h4>
						<div class="a"><p>It happens. Unfortunately you'll have to start over by reloading the page, or by reloading a previous save (if you have one).</p>
						</div>
						<h4 class="q">Wait, I can save?</h4>
						<div class="a"><p>YES! Do it, and do it often.</p>
						</div>
						<h4 class="q">I don't know what that other guy's problem is. I TOTALLY just defeated a monster.</h4>
						<div class="a"><p>Congrats! You may now loot its corpse. You'll likely find gold, gems, or items you can equip to make your character stronger. It's also worth noting that you CAN temporarily overload your inventory, you just have to resolve the issue of being over-full before leaving the loot screen.</p>
						</div>
						<h4 class="q">I found a bug and/or something is broken!</h4>
						<div class="a"><p>This game is still in development, so unforunately that's not unexpected. I will make every effort to fix the bug you found, however I need as much information from you as possible regarding what occurred. Please email any error messages you see, as well as what you were doing at the time the error occurred.</p>
						</div>
						<h4 class="q">Oh man, I just got a great idea for this game!</h4>
						<div class="a"><p>Email me with your idea and I'll consider adding it.</p>
						</div>
						<h4 class="q">Hey, what gives? You didn't answer my question?</h4>
						<div class="a"><p>Please email it to me and I will answer it and/or add it here, as appropriate. This FAQ is also not done yet, so please be patient :)</p>
						</div>
					</div>
				</div>
			</div>
			<!-- end FAQ area -->

			<!-- start footer row -->
			<div class="row footer">
				<div class="col-md-4">
					<span class="copyright">Copyright 2016 Emmett Framson under <a href="http://www.perlfoundation.org/artistic_license_2_0" target="_blank">The Artistic License 2.0</a></span>
				</div>
				<div class="col-md-1"></div>
				<div class="col-md-1"><a class="footer-link" role="button" data-bind="click: showFaq">Help/FAQ</a></div>
				<div class="col-md-2"></div>
				<div class="col-md-4">
					<span class="feedback">Bugs/feedback welcomed at framsone at gmail dot com</span>
				</div>
			</div>
			<!-- end footer row -->
		</div> <!-- end container -->

		<!-- Bootstrap core JavaScript
		================================================== -->
		<!-- Placed at the end of the document so the pages load faster -->
		<script src="js/require.js" data-main="js/main"></script>
		<!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
		<!--<script src="js/ie10-viewport-bug-workaround.js"></script>-->
	</body>
</html>
